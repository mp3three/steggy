import {
  IsEnum,
  IsNumber,
  IsObjectId,
  IsOptional,
  IsString,
  ValidateNested,
} from '@automagical/validation';
import { ActionConditionEQ, ActionNames, Handers, Method } from './constants';

/**
 * ActionDTO
 */
export class ActionCondition {
  // #region Object Properties

  /**
   * Equals vs not equals
   */
  @IsEnum(ActionConditionEQ)
  @IsOptional()
  public eq?: ActionConditionEQ;
  /**
   * Custom javascript or [JSON](https://jsonlogic.com/)
   */
  @IsString()
  @IsOptional()
  public custom?: string;
  /**
   * Field key
   */
  @IsString()
  @IsOptional()
  public field?: string;
  /**
   * Comparison value
   */
  @IsString()
  @IsOptional()
  public value?: string;

  // #endregion Object Properties
}

export class ActionDTO<SETTINGS extends Record<never, string>> {
  // #region Object Properties

  /**
   * When this action should run
   */
  @IsEnum(Handers, { each: true })
  public handler: Handers[];
  /**
   * Trigger action on methods
   */
  @IsEnum(Method, { each: true })
  public method: Method[];
  /**
   * Which action to run
   */
  @IsEnum(ActionNames)
  public name: ActionNames;
  /**
   * FIXME: What is this? Can it be set on the UI? Which direction is it sorted?
   */
  @IsNumber()
  public priority: number;
  /**
   * Resource reference to the form this is attached to
   *
   * TODO: This probably should be `resource`
   */
  @IsObjectId()
  @IsOptional()
  public form: string;
  /**
   * Autogenerated string
   */
  @IsOptional()
  @IsObjectId()
  public _id?: string;
  /**
   * FIXME: what is this?
   */
  @IsString()
  public machineName: string;
  /**
   * User understandable title
   */
  @IsString()
  public title: string;
  /**
   * Settings provided by specific action
   */
  @ValidateNested()
  public settings?: SETTINGS;
  /**
   * Conditionals to prevent running the action from running
   */
  @ValidateNested()
  @IsOptional()
  public condition?: ActionCondition;

  // #endregion Object Properties
}
