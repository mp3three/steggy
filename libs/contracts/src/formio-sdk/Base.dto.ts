import {
  IsDateString,
  IsEnum,
  IsObjectId,
  IsOptional,
  validate,
  ValidationError,
} from '@automagical/validation';
import * as faker from 'faker';
import * as dayjs from 'dayjs';
import { AccessPermission, AccessTypes } from './constants';

export class CanFake {
  // #region Public Static Methods

  public static fake(): Record<never, unknown> {
    return {};
  }

  public static validate<T extends Record<never, unknown>>(
    obj: T,
  ): Promise<ValidationError[]> {
    return validate(obj);
  }

  // #endregion Public Static Methods
}

//
export class AccessDTO extends CanFake {
  // #region Public Static Methods

  public static fake(): AccessDTO {
    return {
      ...super.fake(),
      type: faker.random.arrayElement(Object.values(AccessTypes)),
      roles: Array(faker.datatype.number(5)).map(() => faker.random.uuid()),
    };
  }

  // #endregion Public Static Methods

  // #region Object Properties

  @IsEnum(AccessTypes)
  public type: AccessTypes;
  @IsEnum(AccessPermission)
  @IsOptional()
  public permission?: AccessPermission;
  @IsObjectId({
    each: true,
  })
  public roles: string[];

  // #endregion Object Properties
}

export type BaseOmitProps = 'owner' | 'project';

/**
 * Common properties between all objects
 */
export abstract class BaseDTO extends CanFake {
  // #region Public Static Methods

  public static fake(): Omit<BaseDTO, BaseOmitProps> {
    return {
      ...super.fake(),
      created: dayjs().toISOString(),
      modified: dayjs().toISOString(),
    };
  }

  // #endregion Public Static Methods

  // #region Object Properties

  /**
   * User ID for owner of this project
   *
   * See Users collection in Portal Base
   */
  @IsObjectId()
  public owner: string;
  /**
   * Autogenerated creation date
   */
  @IsOptional()
  @IsDateString()
  public created?: string;
  /**
   * Autogenerated last modified date
   */
  @IsOptional()
  @IsDateString()
  public modified?: string;
  /**
   * Autogenerated string
   */
  @IsOptional()
  @IsObjectId()
  public _id?: string;
  /**
   * If this is defined, then this must be a stage. ID reference to another project
   */
  @IsOptional()
  @IsObjectId()
  public project?: string;

  // #endregion Object Properties
}
