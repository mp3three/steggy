import { Prop } from '@nestjs/mongoose';
import { ApiProperty } from '@nestjs/swagger';
import { IsDateString, IsOptional, IsString } from 'class-validator';
import dayjs from 'dayjs';
import { Types } from 'mongoose';

import { CanFake } from './can-fake.dto';

export class DBFake extends CanFake {
  // #region Public Static Methods

  public static fake(): DBFake {
    return {
      _id: Types.ObjectId().toHexString(),
      created: dayjs().toDate(),
      modified: dayjs().toDate(),
    };
  }

  // #endregion Public Static Methods

  // #region Object Properties

  /**
   * Autogenerated creation date
   */
  @ApiProperty({
    description: 'Autogenerated property',
    readOnly: true,
    title: 'Date of creation',
    type: 'Date',
  })
  @IsOptional()
  @IsDateString()
  @Prop({
    index: true,
  })
  public created?: Date;
  /**
   * Autogenerated last modified date
   */
  @IsOptional()
  @IsDateString()
  @Prop({
    index: true,
  })
  public modified?: Date;
  /**
   * Autogenerated string
   */
  @IsOptional()
  @IsString()
  public _id?: string;

  // #endregion Object Properties
}
